'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _get = _interopDefault(require('lodash/fp/get'));
var _find = _interopDefault(require('lodash/fp/find'));
var _map = _interopDefault(require('lodash/fp/map'));
var _isEmpty = _interopDefault(require('lodash/fp/isEmpty'));
var _startsWith = _interopDefault(require('lodash/fp/startsWith'));
var _isString = _interopDefault(require('lodash/fp/isString'));
var _isEqual = _interopDefault(require('lodash/fp/isEqual'));
var _includes = _interopDefault(require('lodash/fp/includes'));
var _assignIn = _interopDefault(require('lodash/fp/assignIn'));
var _forEach = _interopDefault(require('lodash/fp/forEach'));
var _reduce = _interopDefault(require('lodash/fp/reduce'));
var _remove = _interopDefault(require('lodash/fp/remove'));
var _overSome = _interopDefault(require('lodash/fp/overSome'));
var _concat = _interopDefault(require('lodash/fp/concat'));
var _flatMap = _interopDefault(require('lodash/fp/flatMap'));
var _identity = _interopDefault(require('lodash/fp/identity'));

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var _={map:_map};var importLodashDeclaration=function(a,b,c){return a.importDeclaration([a.importDefaultSpecifier(a.identifier("_".concat(c)))],a.stringLiteral("lodash/".concat(b?"fp/":"").concat(c)))};var magicCache=function(a,b,c){return a.variableDeclaration("const",[a.variableDeclarator(a.identifier("_"),a.callExpression(a.memberExpression(a.callExpression(a.identifier("require"),[a.stringLiteral("lodash-magic-cache")]),a.identifier(b?"lodashFP":"lodash")),[a.arrayExpression(_.map(a.stringLiteral)(c))]))])};

var arrayFunctions = ["chunk","compact","concat","difference","differenceBy","differenceWith","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","first","flatten","flattenDeep","flattenDepth","fromPairs","head","indexOf","initial","intersection","intersectionBy","intersectionWith","join","last","lastIndexOf","nth","pull","pullAll","pullAllBy","pullAllWith","pullAt","remove","reverse","slice","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","union","unionBy","unionWith","uniq","uniqBy","uniqWith","unzip","unzipWith","without","xor","xorBy","xorWith","zip","zipObject","zipObjectDeep","zipWith"];

var collectionFunctions = ["countBy","each","eachRight","every","filter","find","findLast","flatMap","flatMapDeep","flatMapDepth","forEach","forEachRight","groupBy","includes","invokeMap","keyBy","map","orderBy","partition","reduce","reduceRight","reject","sample","sampleSize","shuffle","size","some","sortBy"];

var fpFunctions = ["after","ary","before","bind","bindKey","curry","curryRight","debounce","defer","delay","flip","memoize","negate","once","overArgs","partial","partialRight","rearg","rest","spread","throttle","unary","wrap"];

var languageFunctions = ["castArray","clone","cloneDeep","cloneDeepWith","cloneWith","conformsTo","eq","gt","gte","isArguments","isArray","isArrayBuffer","isArrayLike","isArrayLikeObject","isBoolean","isBuffer","isDate","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","isFunction","isInteger","isLength","isMap","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isRegExp","isSafeInteger","isSet","isString","isSymbol","isTypedArray","isUndefined","isWeakMap","isWeakSet","lt","lte","toArray","toFinite","toInteger","toLength","toNumber","toPlainObject","toSafeInteger","toString"];

var mathFunctions = ["add","ceil","divide","floor","max","maxBy","mean","meanBy","min","minBy","multiply","round","subtract","sum","sumBy"];

var numberFunctions = ["clamp","inRange","random"];

var objectFunctions = ["assign","assignIn","assignInWith","assignWith","at","create","defaults","defaultsDeep","entries","entriesIn","extend","extendWith","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","get","has","hasIn","invert","invertBy","invoke","keys","keysIn","mapKeys","mapValues","merge","mergeWith","omit","omitBy","pick","pickBy","result","set","setWith","toPairs","toPairsIn","transform","unset","update","updateWith","values","valuesIn"];

var seqFunctions = ["chain","tap","thru"];

var shortHands = ["assignAll","assignInAll","defaultsAll","defaultsDeepAll","mergeAll","zipAll","assignAllWith","assignInAllWith","curryN","curryRightN","mergeAllWith","restFrom","spreadFrom","trimChars","trimCharsEnd","trimCharsStart","findFrom","findIndexFrom","findLastFrom","findLastIndexFrom","getOr","includesFrom","indexOfFrom","invokeArgs","invokeArgsMap","lastIndexOfFrom","padChars","padCharsEnd","padCharsStart","rangeStep","rangeStepRight","convert","placeholder","nAry","paths","props","always","dropLast","dropLastWhile","unnest","pipe","compose","init","invertObj","indexBy","pluck","pathEq","propEq","complement","omitAll","juxt","useWith","allPass","anyPass","pickAll","unapply","assoc","assocPath","apply","takeLast","takeLastWhile","dissoc","dissocPath","symmetricDifference","symmetricDifferenceBy","symmetricDifferenceWith","zipObj","where","identical","all","path","prop","contains","equals","whereEq","F","T","any","extendAll","extendAllWith","pathOr","propOr","__"];

var stringFunctions = ["camelCase","capitalize","deburr","endsWith","escape","escapeRegExp","kebabCase","lowerCase","lowerFirst","pad","padEnd","padStart","parseInt","repeat","replace","snakeCase","split","startCase","startsWith","template","toLower","toUpper","trim","trimEnd","trimStart","truncate","unescape","upperCase","upperFirst","words"];

var utilFunctions = ["attempt","bindAll","cond","conforms","constant","defaultTo","flow","flowRight","identity","iteratee","matches","matchesProperty","method","methodOf","mixin","noConflict","noop","nthArg","over","overEvery","overSome","property","propertyOf","range","rangeRight","runInContext","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId"];

var propertiesFunctions = ["VERSION","templateSettings"];

var dateFunctions=["now"],_$1={flatMap:_flatMap,identity:_identity},functions=_$1.flatMap(_$1.identity)([arrayFunctions,collectionFunctions,dateFunctions,fpFunctions,languageFunctions,mathFunctions,numberFunctions,objectFunctions,seqFunctions,stringFunctions,utilFunctions,propertiesFunctions,shortHands]);

var _$2={startsWith:_startsWith,get:_get,find:_find,isEqual:_isEqual,isString:_isString,includes:_includes,assignIn:_assignIn,forEach:_forEach,reduce:_reduce,remove:_remove,isEmpty:_isEmpty,overSome:_overSome,concat:_concat},match=function(a){return _$2.overSome([_$2.startsWith("".concat(a,"/")),_$2.isEqual(a)])},matchLodash=match("lodash"),matchLodashFp=match("lodash/fp"),removeLodashImports=function(a){return {ImportDeclaration:function f(b){var c=b.node.source.value;if(_$2.startsWith("lodash-es")(c))throw b.buildCodeFrameError("lodash-magic-import plugin is completely useless with lodash-es");var d=matchLodashFp(c),e=matchLodash(c)&&!d;// useLodashFp
if(a[0]=a[0]||e,a[1]=a[1]||d,a[0]&&a[1])throw b.buildCodeFrameError("Mixing lodash and lodash/fp is prohibited");(e||d)&&b.remove();}}},forbidSeqMethods=function(a,b){if(_$2.includes(a)(["chain","tap","thru"]))throw b.buildCodeFrameError("Using _.".concat(a," method is prohibited"))},forbidSeqObjectWrapping=function(a){var b=a.findParent(function(a){return a.isCallExpression()});if("_"===_$2.get("node.callee.name")(b))throw b.buildCodeFrameError("Using Seq methods is prohibited")},withLodashFunction=function(a,b,c){if(_$2.includes(a)(functions))c();else throw b.buildCodeFrameError("Unknown lodash method _.".concat(a))},replaceIdentifiers=function(a,b,c){return {Identifier:function g(d){if("_"===_$2.get("node.name")(d)){var e=d.findParent(function(a){return a.isMemberExpression()}),f=_$2.get("node.property.name")(e);f&&(forbidSeqMethods(f,d),withLodashFunction(f,e,function(){b||e.replaceWith(a.identifier("_".concat(f))),_$2.includes(f)(c)||c.push(f);})),forbidSeqObjectWrapping(d);}},VariableDeclaration:function c(a){var b=_$2.remove(function(a){return "_"===a.id.name})(a.node.declarations);_$2.isEmpty(b)?a.remove():a.node.declarations=b;}}},visitor=function(a,b,c,d){return _$2.reduce(_$2.assignIn,{})([removeLodashImports(c),replaceIdentifiers(a,b,d)])};

var _$3={get:_get,find:_find,map:_map,isEmpty:_isEmpty},forbidLodashImportAbsence=function(a,b,c,d){if(!b&&!c&&!_$3.isEmpty(d))throw a.buildCodeFrameError("Add a lodash or lodash/fp import")},traverse=function(a,b,c){var d=[],e=[!1,!1];/* eslint-disable prefer-const */b.traverse(visitor(a,c,e,d));var f=e[0],g=e[1];return forbidLodashImportAbsence(b,f,g,d),[d,g]};function Plugin(a){var b=a.types;return {visitor:{Program:function m(a,c){var d=_$3.find(b.isModuleDeclaration)(a.hub.file.ast.program.body);if(d){var e=_$3.get("opts.cache")(c),f=traverse(b,a,e),g=_slicedToArray(f,2),h=g[0],i=g[1],j=function(b){return a.unshiftContainer("body",b)};if(e)j(magicCache(b,i,h));else{var k=function(a){return importLodashDeclaration(b,i,a)},l=_$3.map(k)(h);j(l);}}}}}}

module.exports = Plugin;
//# sourceMappingURL=lodash-magic-import.min.js.map
