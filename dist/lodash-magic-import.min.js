'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _flatMap = _interopDefault(require('lodash/fp/flatMap'));
var _identity = _interopDefault(require('lodash/fp/identity'));
var _startsWith = _interopDefault(require('lodash/fp/startsWith'));
var _get = _interopDefault(require('lodash/fp/get'));
var _find = _interopDefault(require('lodash/fp/find'));
var _isString = _interopDefault(require('lodash/fp/isString'));
var _isEqual = _interopDefault(require('lodash/fp/isEqual'));
var _includes = _interopDefault(require('lodash/fp/includes'));
var _assignIn = _interopDefault(require('lodash/fp/assignIn'));
var _map = _interopDefault(require('lodash/fp/map'));
var _forEach = _interopDefault(require('lodash/fp/forEach'));
var _reduce = _interopDefault(require('lodash/fp/reduce'));
var _remove = _interopDefault(require('lodash/fp/remove'));
var _isEmpty = _interopDefault(require('lodash/fp/isEmpty'));
var _overSome = _interopDefault(require('lodash/fp/overSome'));
var _concat = _interopDefault(require('lodash/fp/concat'));

var _={flatMap:_flatMap,identity:_identity},arrayFunctions=["chunk","compact","concat","difference","differenceBy","differenceWith","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","first","flatten","flattenDeep","flattenDepth","fromPairs","head","indexOf","initial","intersection","intersectionBy","intersectionWith","join","last","lastIndexOf","nth","pull","pullAll","pullAllBy","pullAllWith","pullAt","remove","reverse","slice","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","union","unionBy","unionWith","uniq","uniqBy","uniqWith","unzip","unzipWith","without","xor","xorBy","xorWith","zip","zipObject","zipObjectDeep","zipWith"],collectionFunctions=["countBy","each","eachRight","every","filter","find","findLast","flatMap","flatMapDeep","flatMapDepth","forEach","forEachRight","groupBy","includes","invokeMap","keyBy","map","orderBy","partition","reduce","reduceRight","reject","sample","sampleSize","shuffle","size","some","sortBy"],dateFunctions=["now"],fpFunctions=["after","ary","before","bind","bindKey","curry","curryRight","debounce","defer","delay","flip","memoize","negate","once","overArgs","partial","partialRight","rearg","rest","spread","throttle","unary","wrap"],languageFunctions=["castArray","clone","cloneDeep","cloneDeepWith","cloneWith","conformsTo","eq","gt","gte","isArguments","isArray","isArrayBuffer","isArrayLike","isArrayLikeObject","isBoolean","isBuffer","isDate","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","isFunction","isInteger","isLength","isMap","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isRegExp","isSafeInteger","isSet","isString","isSymbol","isTypedArray","isUndefined","isWeakMap","isWeakSet","lt","lte","toArray","toFinite","toInteger","toLength","toNumber","toPlainObject","toSafeInteger","toString"],mathFunctions=["add","ceil","divide","floor","max","maxBy","mean","meanBy","min","minBy","multiply","round","subtract","sum","sumBy"],numberFunctions=["clamp","inRange","random"],objectFunctions=["assign","assignIn","assignInWith","assignWith","at","create","defaults","defaultsDeep","entries","entriesIn","extend","extendWith","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","get","has","hasIn","invert","invertBy","invoke","keys","keysIn","mapKeys","mapValues","merge","mergeWith","omit","omitBy","pick","pickBy","result","set","setWith","toPairs","toPairsIn","transform","unset","update","updateWith","values","valuesIn"],seqFunctions=["chain","tap","thru"],stringFunctions=["camelCase","capitalize","deburr","endsWith","escape","escapeRegExp","kebabCase","lowerCase","lowerFirst","pad","padEnd","padStart","parseInt","repeat","replace","snakeCase","split","startCase","startsWith","template","toLower","toUpper","trim","trimEnd","trimStart","truncate","unescape","upperCase","upperFirst","words"],utilFunctions=["attempt","bindAll","cond","conforms","constant","defaultTo","flow","flowRight","identity","iteratee","matches","matchesProperty","method","methodOf","mixin","noConflict","noop","nthArg","over","overEvery","overSome","property","propertyOf","range","rangeRight","runInContext","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId"],propertiesFunctions=["VERSION","templateSettings"],shortHands=["assignAll","assignInAll","defaultsAll","defaultsDeepAll","mergeAll","zipAll","assignAllWith","assignInAllWith","curryN","curryRightN","mergeAllWith","restFrom","spreadFrom","trimChars","trimCharsEnd","trimCharsStart","findFrom","findIndexFrom","findLastFrom","findLastIndexFrom","getOr","includesFrom","indexOfFrom","invokeArgs","invokeArgsMap","lastIndexOfFrom","padChars","padCharsEnd","padCharsStart","rangeStep","rangeStepRight","convert","placeholder","nAry","paths","props","always","dropLast","dropLastWhile","unnest","pipe","compose","init","invertObj","indexBy","pluck","pathEq","propEq","complement","omitAll","juxt","useWith","allPass","anyPass","pickAll","unapply","assoc","assocPath","apply","takeLast","takeLastWhile","dissoc","dissocPath","symmetricDifference","symmetricDifferenceBy","symmetricDifferenceWith","zipObj","where","identical","all","path","prop","contains","equals","whereEq","F","T","any","extendAll","extendAllWith","pathOr","propOr","__"],functions=_.flatMap(_.identity)([arrayFunctions,collectionFunctions,dateFunctions,fpFunctions,languageFunctions,mathFunctions,numberFunctions,objectFunctions,seqFunctions,stringFunctions,utilFunctions,propertiesFunctions,shortHands]);

var _$1={startsWith:_startsWith,get:_get,find:_find,isEqual:_isEqual,isString:_isString,includes:_includes,assignIn:_assignIn,map:_map,forEach:_forEach,reduce:_reduce,remove:_remove,isEmpty:_isEmpty,overSome:_overSome,concat:_concat},match=function(a){return _$1.overSome([_$1.startsWith(a),_$1.isEqual(a)])},matchLodash=match("lodash"),matchLodashFp=match("lodash/fp"),removeLodashImports=function(a){return{ImportDeclaration:function ImportDeclaration(b){var c=b.node.source.value;if(_$1.startsWith("lodash-es")(c))throw b.buildCodeFrameError("lodash-magic-import plugin is completely useless with lodash-es");var d=matchLodashFp(c),e=matchLodash(c)&&!d;if(a[0]=a[0]||e, a[1]=a[1]||d, a[0]&&a[1])throw b.buildCodeFrameError("Mixing lodash and lodash/fp is prohibited");(e||d)&&b.remove();}}},checkProhibitedFunction=function(a,b){if(_$1.includes(b)(["chain","tap","thru"]))throw a.buildCodeFrameError("Using _.".concat(b," method is prohibited"))},replaceAndGet=function(a,b){return{Identifier:function Identifier(c){if("_"===_$1.get("node.name")(c)){var d=c.findParent(function(a){return a.isMemberExpression()}),e=_$1.get("node.property.name")(d);if(e)if(checkProhibitedFunction(c,e), _$1.includes(e)(functions))d.replaceWith(a.identifier("_".concat(e))), _$1.includes(e)(b)||b.push(e);else throw d.buildCodeFrameError("Unknown lodash method _.".concat(e));var f=c.findParent(function(a){return a.isCallExpression()});if("_"===_$1.get("node.callee.name")(f))throw f.buildCodeFrameError("Using Seq methods is prohibited")}},VariableDeclaration:function VariableDeclaration(a){var b=_$1.remove(function(a){return"_"===a.id.name})(a.node.declarations);_$1.isEmpty(b)?a.remove():a.node.declarations=b;}}},importLodashDeclaration=function(a,b,c){return a.importDeclaration([a.importDefaultSpecifier(a.identifier("_".concat(c)))],a.stringLiteral("lodash/".concat(b?"fp/":"").concat(c)))},magicCache=function(a,b){return a.variableDeclaration("const",[a.variableDeclarator(a.identifier("_magicache"),a.memberExpression(a.callExpression(a.identifier("require"),[a.stringLiteral("lodash-magic-cache")]),a.identifier(b?"fp":"lodash"),!1))])},magicCacheRequire=function(a,b){return a.VariableDeclaration("const",[a.variableDeclarator(a.identifier("_".concat(b)),a.callExpression(a.identifier("_magicache"),[a.stringLiteral(b)]))])};function Plugin(a){var b=a.types;return{visitor:{Program:function Program(a,c){var d=_$1.find(b.isModuleDeclaration)(a.hub.file.ast.program.body);if(d){var g=_$1.get("opts.cache")(c),h=[],i=[!1,!1],j=_$1.reduce(_$1.assignIn,{})([removeLodashImports(i),replaceAndGet(b,h)]);a.traverse(j);var e=i[0],f=i[1];if(!e&&!f&&!_$1.isEmpty(h))throw a.buildCodeFrameError("Add a lodash or lodash/fp import");var k=function(b){return a.unshiftContainer("body",b)};if(g){var l=_$1.map(function cachedNodeFor(a){return magicCacheRequire(b,a)})(h);k(_$1.concat(magicCache(b,f))(l));}else{var m=_$1.map(function importNodeFor(a){return importLodashDeclaration(b,f,a)})(h);k(m);}}}}}}

module.exports = Plugin;
//# sourceMappingURL=lodash-magic-import.min.js.map
